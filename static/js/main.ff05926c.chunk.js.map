{"version":3,"sources":["assets/github_badge.png","components/search.js","App.js","components/main.js","searchUser.js","index.js"],"names":["module","exports","Search","Component","state","handleClick","input","value","alert","props","searchName","className","src","require","onFocus","this","handleFocus","ref","placeholder","onClick","Main","users","nextProps","axios","get","then","response","console","log","data","items","setState","catch","error","length","map","item","index","key","avatar_url","login","href","html_url","target","searchUser","setSearchName","name","ReactDOM","render","document","getElementById"],"mappings":"4MAAAA,EAAOC,QAAU,IAA0B,0C,oKCsC5BC,GClCGC,Y,uNDAdC,MAAQ,G,EAERC,YAAc,WACV,IAAI,EAAKC,MAAMC,MAEX,OADAC,MAAM,8BACC,EAEX,EAAKC,MAAMC,WAAW,EAAKJ,MAAMC,OACjC,EAAKD,MAAMC,MAAQ,I,wEAeb,IAAD,OACL,OACA,yBAAKI,UAAU,UACX,yBAAKC,IAAKC,EAAQ,MAClB,2BAAOC,QAASC,KAAKC,YAAaC,IAAK,SAAAX,GAAK,OAAE,EAAKA,MAAMA,GAAOY,YAAY,4BAC5E,4BAAQC,QAASJ,KAAKV,aAAtB,e,GA7BSF,cEgDNiB,G,iNA9CXhB,MAAQ,CACJiB,MAAQ,I,yFAGcC,GAAW,IAAD,OAEhCC,IAAMC,IAAN,gDAAmDF,EAAUZ,aACxDe,MAAK,SAAAC,GACFC,QAAQC,IAAIF,EAASG,KAAKC,OAE1B,EAAKC,SAAS,CAACV,MAAMK,EAASG,KAAKC,WACpCE,OAAM,SAAAC,GACLN,QAAQC,IAAIK,Q,+BAUpB,OAAGlB,KAAKX,MAAMiB,MAAMa,OACR,yBAAKvB,UAAU,YAEnBI,KAAKX,MAAMiB,MAAMc,KAAI,SAACC,EAAKC,GAAN,OACjB,yBAAKC,IAAKD,GACN,yBAAKzB,IAAKwB,EAAKG,aACf,2BAAIH,EAAKI,OACT,uBAAGC,KAAML,EAAKM,SAAUC,OAAO,UAAS,qDAO7C,yBAAKhC,UAAU,aAAf,uD,GArCAR,cCyBJyC,E,2MAvBXxC,MAAQ,CACJM,WAAW,I,EAGdmC,cAAgB,SAACC,GACd,EAAKf,SAAS,CAACrB,WAAWoC,K,wEAI1B,OACI,6BACI,gCACI,uDACA,kBAAC,EAAD,CAAQpC,WAAYK,KAAK8B,iBAI7B,kBAAC,EAAD,CAAMnC,WAAYK,KAAKX,MAAMM,kB,GAlBpBP,aCEzB4C,IAASC,OAAO,kBAAC,EAAD,MAAeC,SAASC,eAAe,W","file":"static/js/main.ff05926c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/github_badge.0ba2aa20.png\";","import React, { Component } from 'react';\nimport './search.css'\n\nclass Search extends Component {\n    state = {  }\n\n    handleClick = ()=>{\n        if(!this.input.value){\n            alert('please enter a username !');\n            return false;\n        }\n        this.props.searchName(this.input.value);\n        this.input.value = '';\n    }\n\n    // handleFocus = (e)=>{\n    //     document.addEventListener('keyup',(e)=>{\n    //         let event = e || window.event;\n    //         let key = event.which || event.keyCode || event.charCode;\n    //         if (key == 13) {\n    //             this.handleClick();\n    //         }\n       \n    //     });\n    // }\n\n\n    render() { \n        return ( \n        <div className='search'>\n            <img src={require('../assets/github_badge.png')}></img>\n            <input onFocus={this.handleFocus} ref={input=>this.input=input} placeholder=\"enter a github username\" />\n            <button onClick={this.handleClick}>Search</button>\n        </div>\n        );\n    }\n}\n \nexport default Search;","import React, { Component } from 'react';\nimport './App.css';\nimport axios from 'axios'\n\nclass App extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = { \n      repoName: '',\n      repoUrl: '',\n      loading:'LOADING.....'\n     }\n  }\n\n  componentDidMount(){\n    axios.get(\"https://api.github.com/search/repositories?q=jquery&sort=stars\")\n    .then(response=>{\n      console.log(response);\n      this.setState({\n        repoName: response.data.items[0].name,\n        repoUrl: response.data.items[0].html_url\n      })\n    }).catch((error)=>{\n      this.setState({\n        loading:'we can not find a result !!'\n      });\n      console.log(error);\n      \n    })\n  }\n\n  \n  render() { \n    \n      if(!this.state.repoName){\n        return <h1>{this.state.loading}</h1>\n      }else{\n        return <h2>the repo is <a href={this.state.repoUrl}>{this.state.repoName}</a></h2>\n      }\n   \n  }\n}\n \nexport default App;\n\n\n","import React, { Component } from 'react';\nimport './main.css';\nimport axios from 'axios';\n\nclass Main extends Component {\n    state = { \n        users : '',\n     }\n\n    componentWillReceiveProps(nextProps){\n        \n        axios.get(`https://api.github.com/search/users?q=${nextProps.searchName}`)\n            .then(response=>{\n                console.log(response.data.items);\n                \n                this.setState({users:response.data.items});\n            }).catch(error=>{\n                console.log(error);\n            });\n        \n    }\n\n    render() { \n\n        \n\n        \n        if(this.state.users.length ){\n            return (<div className=\"mainWrap\">\n            {\n                this.state.users.map((item,index)=>(\n                    <div key={index}>\n                        <img src={item.avatar_url} />\n                        <p>{item.login}</p>\n                        <a href={item.html_url} target=\"_blank\"><button>View Github</button></a>\n                    </div>\n                ))\n                \n            }\n        </div>)\n        }else{\n            return <div className='startNote'>Please type in the username you want to look up</div>\n        }\n\n        \n        \n        \n         \n    }\n}\n \nexport default Main;","import React, { Component } from 'react';\nimport './searchUser.css';\nimport Search from './components/search'\nimport Main from './components/main'\n\nclass searchUser extends Component {\n    state = { \n        searchName:''\n     }\n\n     setSearchName = (name)=>{\n        this.setState({searchName:name});\n     }\n\n    render() { \n        return ( \n            <div>\n                <header>\n                    <h1>Search for Github Users</h1>\n                    <Search searchName={this.setSearchName} />\n                    \n                </header>\n                \n                <Main searchName={this.state.searchName} />\n            </div>\n         );\n    }\n}\n \nexport default searchUser;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport SearchUser from './searchUser.js'\n\n\nReactDOM.render(<SearchUser/>, document.getElementById('root'));\n\n"],"sourceRoot":""}